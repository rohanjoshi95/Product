- hosts: master
  become: yes
  tasks:
   - name: install APT Transport HTTPS
     apt:
       name: apt-transport-https
       state: present
   
   - name: install Docker
     apt:
       name: docker.io
       state: present
       update_cache: true
   
   - name: Add ubuntu user and Restart docker
     shell: |
        usermod -aG docker ubuntu
        systemctl restart docker
        systemctl enable docker.service  

   - name: add Kubernetes apt-key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present

   - name: add Kubernetes' APT repository
     apt_repository:
       repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
       state: present
       filename: 'kubernetes'

   - name: install kubelet
     apt:
       name: kubelet
       state: present
       update_cache: true

   - name: install kubeadm
     apt:
       name: kubeadm
       state: present

   - name: install kubectl
     apt:
       name: kubectl
       state: present

   - name: install kubernetes-cni
     apt:
       name: kubernetes-cni
       state: present
   
   - name: Turn Off Swap Space
     shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
     
   - name: Enable and start kubelet service
     shell: |
        systemctl daemon-reload
        systemctl start kubelet
        systemctl enable kubelet.service 
   
   - name: install unzip
     apt: 
       pkg: unzip
       state: present

- hosts: master
  become: yes
  gather_facts: false
  tasks:
   - name: Resetting kubeadm
     shell: kubeadm reset -f
     register: output

   - name: Initializing Kubernetes cluster
     shell: kubeadm init --ignore-preflight-errors=NumCPU
     register: output

   - name: Storing Logs and Generated token for future purpose.
     local_action: copy content={{ output.stdout }} dest=join_token
     become: False

   - name: create .kube directory
     become: yes
     become_user: ubuntu
     file:
       path: $HOME/.kube
       state: directory
       mode: 0755

   - name: copy admin.conf to user's kube config
     copy:
       src: /etc/kubernetes/admin.conf
       dest: /home/ubuntu/.kube/config
       remote_src: yes
       owner: ubuntu

   - name: install Pod network
     become: yes
     become_user: ubuntu
     shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')" >> pod_network_setup.txt
     args:
       chdir: $HOME
       creates: pod_network_setup.txt

   - name: terraform binary downloading
     unarchive:
       src: https://releases.hashicorp.com/terraform/0.12.28/terraform_0.12.28_linux_amd64.zip
       dest: /usr/local/bin
       remote_src: yes

